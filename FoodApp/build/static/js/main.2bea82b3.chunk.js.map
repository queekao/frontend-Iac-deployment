{"version":3,"sources":["components/Cart/Checkout.module.css","components/Cart/Cart.module.css","components/Layout/HeaderCartButton.module.css","components/Meals/AvailableMeals.module.css","components/Layout/Header.module.css","components/Meals/MealForm.module.css","components/UI/Modal.module.css","components/Meals/MealsSummary.module.css","components/UI/Card.module.css","components/UI/Button.module.css","components/UI/Input.module.css","assets/meals.jpg","store/CartContext.js","components/Layout/Header.js","components/Meals/MealsSummary.js","components/UI/Card.js","components/Cart/ButtonIcon.js","components/UI/Button.js","components/UI/Input.js","components/Meals/MealForm.js","components/Meals/AvailableMeals.js","components/Meals/Meals.js","components/UI/Modal.js","components/Cart/Checkout.js","components/Cart/Cart.js","store/CartContextProvider.js","App.js","index.js"],"names":["module","exports","CartContext","React","createContext","item","totalAmount","removeItem","id","addItem","Header","MealsSummary","_jsxs","className","classes","summary","children","_jsx","Card","props","card","ButtonIcon","width","height","viewBox","fill","xmlns","d","Button","type","onClick","concat","button","Input","forwardRef","ref","input","htmlFor","label","MealForm","inputAmountRef","useRef","invalid","useState","inputAttribute","min","max","step","defaultValue","key","Math","random","toFixed","onSubmit","e","preventDefault","enterNumber","current","value","trim","length","onAddToCart","buttonIcon","AvailableMeals","options","animationData","animation","loop","autoplay","View","useLottie","cartData","useContext","meals","setMeals","isLoading","setIsLoading","error","setError","useEffect","async","response","fetch","console","log","ok","Error","data","json","loadedMeals","push","name","description","price","err","fetchMeal","catch","message","mealLoading","mealList","map","meal","wrapper","amount","mealForm","Fragment","Meals","Backdrop","backdrop","ModalOverlay","onCloseCart","modal","Modal","portalEl","document","querySelector","ReactDom","createPortal","isEmpty","Checkout","formValid","setFormValid","postal","street","city","nameRef","postalRef","streetRef","cityRef","form","nameValue","postalValue","streetValue","cityValue","nameValid","postalValid","streetValid","cityValid","formIsValid","control","actions","cancel","onCancel","confirm","Cart","showCheckout","setShowCheckout","isSubmit","setIsSubmit","didSubmit","setDidSubmit","cartTotalAmount","hasItem","removeItemHandler","addItemHandler","cartItems","btnGroup","btnRemove","bind","btnAdd","modalActions","orderHandler","submitSuccessContent","isSubmitContent","modalContent","total","method","headers","body","JSON","stringify","user","userData","orderItem","submitItem","defaultCart","cartReducer","preState","action","updatedTotalAmount","existItemIndex","findIndex","i","existItem","updatedItems","updateExistItem","updatedRmoveAmount","filter","updateItem","CartContextProvider","cartState","dispatchCart","useReducer","CartValue","Provider","App","cartShow","setCart","hideCart","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2bea82b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__26gr1\",\"control\":\"Checkout_control__2qGfb\",\"actions\":\"Checkout_actions__2X_6_\",\"submit\":\"Checkout_submit__2BFZZ\",\"invalid\":\"Checkout_invalid__2gAN9\",\"confirm\":\"Checkout_confirm__3JvpT\",\"cancel\":\"Checkout_cancel__1bRnc\",\"error\":\"Checkout_error__sELWx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2pjQw\",\"cart-item\":\"Cart_cart-item__1yHa1\",\"summary\":\"Cart_summary__9Gpck\",\"price\":\"Cart_price__3Zo1I\",\"amount\":\"Cart_amount__w4F88\",\"btnGroup\":\"Cart_btnGroup___buzu\",\"btnRemove\":\"Cart_btnRemove__24NsG\",\"btnAdd\":\"Cart_btnAdd__2Xp_9\",\"total\":\"Cart_total__3pLin\",\"actions\":\"Cart_actions__1GOmr\",\"button--alt\":\"Cart_button--alt__1Z2QQ\",\"button\":\"Cart_button__fw1-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__3CMOT\",\"icon\":\"HeaderCartButton_icon__9KWtg\",\"text\":\"HeaderCartButton_text__3oq9u\",\"badge\":\"HeaderCartButton_badge__1Z3gL\",\"bump\":\"HeaderCartButton_bump__3atD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AvailableMeals_wrapper__3AZgW\",\"meals\":\"AvailableMeals_meals__2ZLCP\",\"meals-appear\":\"AvailableMeals_meals-appear__ONwLi\",\"error\":\"AvailableMeals_error__3LgjX\",\"mealLoading\":\"AvailableMeals_mealLoading__2y2Q0\",\"mealForm\":\"AvailableMeals_mealForm__1o4sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__zSTUo\",\"main-image\":\"Header_main-image__2Q3So\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MealForm_button__-ONkf\",\"buttonIcon\":\"MealForm_buttonIcon__1CaIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1mfF6\",\"modal\":\"Modal_modal__4DXUe\",\"slide-down\":\"Modal_slide-down__W3MdX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__22zUX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__6-R6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__2swPp\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","import React from \"react\";\n//Store the dummy data store folder is for the data storage\nconst CartContext = React.createContext({\n  item: [],\n  totalAmount: 0,\n  removeItem(id) {},\n  addItem(item) {},\n  // ID is looking for the item to remove\n});\n\nexport default CartContext;\n","import React from \"react\";\nimport classes from \"./Header.module.css\";\nimport mealImage from \"../../assets/meals.jpg\";\nimport HeaderCartButton from \"./HeaderCartButton\";\n//IF we wanna use image we need to import it\n// which transformed to include image to application to deploy the server\nconst Header = (props) => {\n  return (\n    <React.Fragment>\n      <header className={classes.header}>\n        <h1>ReactMeals</h1>\n        <HeaderCartButton onClick={props.onShowCart} />\n      </header>\n      <div className={classes[\"main-image\"]}>\n        <img src={mealImage} alt=\"Just a img\"></img>\n      </div>\n    </React.Fragment>\n  );\n  //we also can just add URL to the src\n  // we can choose return one or two component\n};\nexport default Header;\n","// Meal text\nimport classes from \"./MealsSummary.module.css\";\nconst MealsSummary = () => {\n  return (\n    <section className={classes.summary}>\n      <h2>Delicious Food, Delivered To You</h2>\n      <p>\n        Choose your favorite meal from our broad selection of available meals\n        and enjoy a delicious lunch or dinner at home.\n      </p>\n      <p>\n        All our meals are cooked with high-quality ingredients, just-in-time and\n        of course by experienced chefs!\n      </p>\n    </section>\n  );\n};\nexport default MealsSummary;\n","import classes from \"./Card.module.css\";\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\nexport default Card;\n","const ButtonIcon = (props) => {\n  return (\n    <span className={props.className}>\n      <svg\n        width=\"20\"\n        height=\"20\"\n        viewBox=\"0 0 20 20\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M10 0C15.5228 0 20 4.47715 20 10C20 15.5228 15.5228 20 10 20C4.47715 20 0 15.5228 0 10C0 4.47715 4.47715 0 10 0ZM10 1.5C5.30558 1.5 1.5 5.30558 1.5 10C1.5 14.6944 5.30558 18.5 10 18.5C14.6944 18.5 18.5 14.6944 18.5 10C18.5 5.30558 14.6944 1.5 10 1.5ZM10 5C10.4142 5 10.75 5.33579 10.75 5.75V9.25H14.25C14.6642 9.25 15 9.5858 15 10C15 10.4142 14.6642 10.75 14.25 10.75H10.75V14.25C10.75 14.6642 10.4142 15 10 15C9.5858 15 9.25 14.6642 9.25 14.25V10.75H5.75C5.33579 10.75 5 10.4142 5 10C5 9.5858 5.33579 9.25 5.75 9.25H9.25V5.75C9.25 5.33579 9.5858 5 10 5Z\"\n          fill=\"white\"\n        />\n      </svg>\n    </span>\n  );\n};\n//We can add the ButtonIcon here because this icon is for the cart(also in header btn)\nexport default ButtonIcon;\n","import classes from \"./Button.module.css\";\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type}\n      onClick={props.onClick}\n      className={`${props.className} ${classes.button}`}\n    >\n      {props.children}\n    </button>\n  );\n};\nexport default Button;\n","import { forwardRef } from \"react\";\nimport classes from \"./Input.module.css\";\nconst Input = forwardRef((props, ref) => {\n  // child pass ref to parent\n  return (\n    <div className={`${props.className} ${classes.input}`}>\n      <input ref={ref} {...props.input}></input>\n      <label htmlFor={props.input.id}>{props.label}</label>\n    </div>\n  ); //here we use an 'obj' outside of component the set our attribute\n}); //and we can use seperate operator to set the input attribute\nexport default Input;\n","import { useRef, useState } from \"react\";\nimport ButtonIcon from \"../Cart/ButtonIcon\";\nimport Button from \"../UI/Button\";\nimport Input from \"../UI/Input\";\nimport classes from \"./MealForm.module.css\";\n\nconst MealForm = (props) => {\n  const inputAmountRef = useRef();\n  const [invalid] = useState(false);\n  const mealHandler = (e) => {\n    e.preventDefault();\n    const enterNumber = inputAmountRef.current.value;\n    //we set enterNumber in the 'mealHandler' to deal with the value\n    if (\n      enterNumber.trim().length === 0 ||\n      +enterNumber < 1 ||\n      +enterNumber > 5\n    ) {\n      //validation for invalid value\n      return;\n    }\n    //here we want to get our context but not in use component\n    props.onAddToCart(+enterNumber);\n  };\n  const inputAttribute = {\n    // and go to the component that receive 'ref' and use 'forwardRef'\n    id: \"amount_\" + props.id,\n    // make every 'id' unique\n    type: \"number\",\n    min: \"1\",\n    max: \"5\",\n    step: \"1\",\n    defaultValue: \"1\",\n    key: Math.random().toFixed(2),\n    // this 'defaultValue' is for the input which is populated first time\n  };\n  return (\n    <form onSubmit={mealHandler}>\n      <Input ref={inputAmountRef} label=\"Amount\" input={inputAttribute} />\n      <Button className={classes.button}>\n        <ButtonIcon className={classes.buttonIcon} />\n        Add\n      </Button>\n      {invalid && <p>Please enter number between 1 to 5</p>}\n    </form>\n  );\n};\nexport default MealForm;\n","import {useContext, useEffect, useState} from \"react\";\nimport {useLottie} from \"lottie-react\";\nimport animation from \"../../assets/lotties/lf30_editor_zugvminb.json\";\n//we useContext here to update data\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealForm from \"./MealForm\";\nimport React from \"react\";\nimport CartContext from \"../../store/CartContext\";\n//render the meal list\nconst AvailableMeals = (props) => {\n  //\n  const options = {\n    animationData: animation,\n    loop: false,\n    autoplay: true,\n  };\n  const {View} = useLottie(options);\n  const cartData = useContext(CartContext);\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  //Meals originally was empty so we nedd to use setMeal in order to load meal\n  useEffect(() => {\n    //useEffect cant use async fn because it will return clean up fn not\n    setIsLoading(true);\n    setError(null);\n    const fetchMeal = async () => {\n      try {\n        const response = await fetch(\n          \"https://food-app-5f4d3-default-rtdb.firebaseio.com/meals.json\"\n        );\n        console.log(response);\n        if (!response.ok) throw new Error(\"Cannot read the data\");\n        const data = await response.json();\n        const loadedMeals = [];\n        console.log(loadedMeals);\n        for (const key in data) {\n          loadedMeals.push({\n            id: key,\n            name: data[key].name,\n            description: data[key].description,\n            price: data[key].price,\n          });\n        }\n        setMeals(loadedMeals);\n        setIsLoading(false);\n      } catch (err) {\n        setIsLoading(false);\n        throw new Error(err);\n      }\n    };\n    fetchMeal().catch((err) => {\n      setError(err.message);\n      setIsLoading(false);\n    }); //return promise\n    //if we try to catch a error of a promise then promise will be rejected\n    // If you specify here anything went wrong in 'fetchMeal' will be shown\n  }, []);\n  console.log(meals);\n  if (isLoading) {\n    return <p className={classes.mealLoading}>Loading...</p>;\n  }\n  if (!isLoading && error) {\n    return (\n      <section>\n        <p className={classes.error}>{error}</p>\n      </section>\n    );\n  }\n  const mealList = meals.map((meal) => {\n    const addToCart = (amount) => {\n      console.log(amount);\n      cartData.addItem({\n        id: meal.id,\n        key: meal.id,\n        name: meal.name,\n        price: meal.price,\n        amount: amount,\n      });\n    };\n    return (\n      <div key={meal.id} className={classes.wrapper}>\n        {/* this is from the form unique id */}\n        <li id={meal.id} key={meal.id}>\n          <h3>{meal.name}</h3>\n          <p>{meal.description}</p>\n          <span>${meal.price}</span>\n        </li>\n        <MealForm\n          onAddToCart={addToCart}\n          // be called when we submit the form\n          className={classes.mealForm}\n        ></MealForm>\n      </div>\n    );\n  });\n  // const mealList = DUMMY_MEALS.map((meal) => {\n  //   const addToCart = (amount) => {\n  //     console.log(amount);\n  //     cartData.addItem({\n  //       id: meal.id,\n  //       key: meal.id,\n  //       name: meal.name,\n  //       price: meal.price,\n  //       amount: amount,\n  //     });\n  //     //we pass an obj in the 'addItem' because we forward this obj to reducer\n  //   };\n  //   return (\n  //     <div key={meal.id} className={classes.wrapper}>\n  //       {/* this is from the form unique id */}\n  //       <li id={meal.id} key={meal.id}>\n  //         <h3>{meal.name}</h3>\n  //         <p>{meal.description}</p>\n  //         <span>${meal.price}</span>\n  //       </li>\n  //       <MealForm\n  //         onAddToCart={addToCart}\n  //         // be called when we submit the form\n  //         className={classes.mealForm}\n  //       ></MealForm>\n  //     </div>\n  //   );\n  // });\n  //Immutable element to do this we copy them 👆\n\n  return (\n    <React.Fragment>\n      <section className={classes.meals}>\n        <Card>\n          <ul>{mealList}</ul>\n          {/* you need to set the state before you render the mealList */}\n        </Card>\n      </section>\n      <div>{View}</div>\n    </React.Fragment>\n  ); //Wrapper the 'mealList' with the card UI component\n};\nexport default AvailableMeals;\n","//ALL Meal content\nimport React from \"react\";\nimport MealsSummary from \"./MealsSummary\";\nimport AvailableMeals from \"./AvailableMeals\";\nconst Meals = () => {\n  return (\n    <React.Fragment>\n      <MealsSummary />\n      <AvailableMeals />\n    </React.Fragment>\n  );\n};\nexport default Meals;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport classes from \"./Modal.module.css\";\nconst Backdrop = (props) => {\n  return <div onClick={props.onClick} className={classes.backdrop}></div>;\n  //if we \"useContext\" this backdrop will be specific and not able  to use in another content\n};\nconst ModalOverlay = (props) => {\n  return (\n    <div onClick={props.onCloseCart} className={classes.modal}>\n      {props.children}\n    </div>\n  );\n};\nconst Modal = (props) => {\n  const portalEl = document.querySelector(\"#Modal\");\n  return (\n    // <React.Fragment>\n    //   {ReactDom.createPortal(\n    //     <div className={classes.backdrop}></div>,\n    //     document.getElementById(\"Modal\")\n    //   )}\n    //   {ReactDom.createPortal(\n    //     <Cart className={classes.modal}></Cart>,\n    //     document.getElementById(\"Modal\")\n    //   )}\n    // </React.Fragment>\n    //we can create a lot of components in one component\n    <React.Fragment>\n      {/* In mutiple component we also need to set on its own component */}\n      {ReactDom.createPortal(\n        <Backdrop onClick={props.onCloseCart} />,\n        portalEl\n      )}\n      ;\n      {ReactDom.createPortal(\n        <ModalOverlay>{props.children}</ModalOverlay>,\n        portalEl\n      )}\n    </React.Fragment>\n  );\n};\nexport default Modal;\n","import { useState, useRef } from \"react\";\nimport Button from \"../UI/Button\";\nimport classes from \"./Checkout.module.css\";\n// const defaultState = { value: \"\", state: false };\n// const inputReducer = () => {\n//   return defaultState;\n// };\n//helper\nconst isEmpty = (value) => value.trim() === \"\";\nconst isFiveCharaters = (value) => value.trim().length === 5;\n//\nconst Checkout = (props) => {\n  const [formValid, setFormValid] = useState({\n    name: true,\n    postal: true,\n    street: true,\n    city: true,\n  });\n  //   const [inputState, dispatchInput] = useReducer(inputReducer, defaultState);\n  const nameRef = useRef();\n  const postalRef = useRef();\n  const streetRef = useRef();\n  const cityRef = useRef();\n  const submitForm = (e) => {\n    e.preventDefault();\n    const nameValue = nameRef.current.value;\n    const postalValue = postalRef.current.value;\n    const streetValue = streetRef.current.value;\n    const cityValue = cityRef.current.value;\n    const nameValid = !isEmpty(nameValue);\n    const postalValid = isFiveCharaters(postalValue);\n    const streetValid = !isEmpty(streetValue);\n    const cityValid = !isEmpty(cityValue);\n    setFormValid({\n      name: nameValid,\n      postal: postalValid,\n      street: streetValid,\n      city: cityValid,\n    });\n    //you cant just 'setFormValid' here form will be only invalid\n    //after the component re-evaluate and before that we already submit the form\n    const formIsValid = nameValid && postalValid && streetValid && cityValid;\n    console.log(nameValid, postalValid, streetValid, cityValid);\n    console.log(formValid);\n    //   if (!formValid) {\n    //       return;//first time render is 'true\n    // }\n    if (!formIsValid) {\n      return;\n    }\n    if (formValid) {\n      props.onSubmit({\n        name: nameValue,\n        postal: postalValue,\n        street: streetValue,\n        city: cityValue,\n      });\n      nameRef.current.value = \"\";\n      postalRef.current.value = \"\";\n      streetRef.current.value = \"\";\n      cityRef.current.value = \"\";\n    }\n  };\n  return (\n    <form className={classes.form} onSubmit={submitForm}>\n      <div\n        className={`${classes.control} ${!formValid.name && classes.invalid}`}\n      >\n        <label htmlFor=\"name\">Name</label>\n        <input id=\"name\" type=\"text\" ref={nameRef}></input>\n        {!formValid.name && (\n          <p className={classes.error}>Name Value invalid!!</p>\n        )}\n      </div>\n      <div\n        className={`${classes.control} ${!formValid.postal && classes.invalid}`}\n      >\n        <label htmlFor=\"postal\">Postal Code</label>\n        <input id=\"postal\" type=\"text\" ref={postalRef}></input>\n        {!formValid.postal && (\n          <p className={classes.error}>Postal Value must greater than 5!!</p>\n        )}\n      </div>\n      <div\n        className={`${classes.control} ${!formValid.street && classes.invalid}`}\n      >\n        <label htmlFor=\"street\">Street</label>\n        <input id=\"street\" type=\"text\" ref={streetRef}></input>\n        {!formValid.street && (\n          <p className={classes.error}>Street Value invalid!!</p>\n        )}\n      </div>\n      <div\n        className={`${classes.control} ${!formValid.city && classes.invalid}`}\n      >\n        <label htmlFor=\"city\">City</label>\n        <input id=\"city\" type=\"text\" ref={cityRef}></input>\n        {!formValid.city && (\n          <p className={classes.error}>City Value invalid!!</p>\n        )}\n      </div>\n      <div className={classes.actions}>\n        <Button\n          type=\"button\"\n          className={classes.cancel}\n          onClick={props.onCancel}\n        >\n          Cancel\n        </Button>\n        <Button type=\"submit\" className={classes.confirm}>\n          Confirm\n        </Button>\n      </div>\n    </form>\n  );\n};\nexport default Checkout;\n","import React, { useContext, useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport classes from \"./Cart.module.css\";\nimport Modal from \"../UI/Modal\";\nimport CartContext from \"../../store/CartContext\";\nimport Checkout from \"./Checkout\";\nconst Cart = (props) => {\n  //Now we use update the Item in Modal here\n  const cartData = useContext(CartContext);\n  const [showCheckout, setShowCheckout] = useState(false);\n  const [isSubmit, setIsSubmit] = useState(false); //loading\n  const [didSubmit, setDidSubmit] = useState(false); //success msg\n  const [error, setError] = useState(null);\n  const cartTotalAmount = `$${cartData.totalAmount.toFixed(2)}`;\n  const hasItem = cartData.item.length > 0;\n  const removeItemHandler = (id) => {\n    cartData.removeItem(id);\n  };\n  const addItemHandler = (item) => {\n    cartData.addItem({\n      ...item, //we use seperate operate to move other data and amount plus one\n      amount: 1,\n    }); //the item should be obj\n  };\n  const submitData = async (userData) => {\n    try {\n      setIsSubmit(true);\n      //receive data from the checkout component\n      const response = await fetch(\n        \"https://food-app-5f4d3-default-rtdb.firebaseio.com/order.json\",\n        {\n          //specify a new node of 'order'\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ user: userData, orderItem: cartData.item }),\n        }\n      ); //with only pass the data to the backend server we dont even need resolve method\n      if (!response.ok) throw new Error(\"Fail to submit\");\n      setIsSubmit(false);\n      setDidSubmit(true);\n      cartData.submitItem();\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  // map cartItems\n  const cartItems = cartData.item.map((item) => (\n    <li\n      className={classes[\"cart-item\"]}\n      key={item.id}\n      id={item.id}\n      name={item.name}\n      amount={item.amount}\n      price={item.price}\n    >\n      <div>\n        <h2>{item.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>💲{item.price}</span>\n          <span className={classes.amount}>ⅹ {item.amount}</span>\n        </div>\n      </div>\n      <div className={classes.btnGroup}>\n        <Button\n          className={classes.btnRemove}\n          onClick={removeItemHandler.bind(cartData, item.id)}\n        >\n          ⎻\n        </Button>\n        <Button\n          className={classes.btnAdd}\n          onClick={addItemHandler.bind(cartData, item)}\n        >\n          +\n        </Button>\n        {/* in order to make btn work we need bind original \n        obj and re-configure the function */}\n      </div>\n    </li>\n  ));\n  // map cartItems\n  const orderHandler = () => {\n    setShowCheckout(true);\n  };\n  // Close Cofirm\n  const closeCheckout = () => {\n    setShowCheckout(false);\n  };\n  const modalActions = (\n    <div className={classes.actions}>\n      <Button onClick={props.onCloseCart} className={classes[\"button--alt\"]}>\n        Close\n      </Button>\n      {hasItem && (\n        <Button onClick={orderHandler} className={classes.button}>\n          Order\n        </Button>\n      )}\n    </div>\n  );\n  const submitSuccessContent = <p>You are successfully submit the content😀</p>;\n  const isSubmitContent = <p>Sending order data...</p>;\n  const modalContent = (\n    <React.Fragment>\n      <ul className={classes[\"cart-items\"]}>{cartItems}</ul>\n      <div className={classes.total}>\n        <span>Total Amount</span>\n        <span>{cartTotalAmount}</span>\n      </div>\n      {showCheckout ? (\n        <Checkout onSubmit={submitData} onCancel={props.onCloseCart} />\n      ) : (\n        modalActions\n      )}\n    </React.Fragment>\n  );\n  return (\n    <Modal onCloseCart={props.onCloseCart} className={props.className}>\n      {!isSubmit && !didSubmit && modalContent}\n      {isSubmit && isSubmitContent}\n      {!isSubmit && didSubmit && submitSuccessContent}\n    </Modal>\n  );\n};\nexport default Cart;\n","import React from \"react\";\nimport { useReducer } from \"react\";\nimport CartContext from \"./CartContext\";\n\nconst defaultCart = {\n  item: [],\n  totalAmount: 0,\n  //this defaultcart is 'DUMMY' and 'cartState' is Dynamic\n};\nconst cartReducer = (preState, action) => {\n  // we dont directly use the 'preState'\n  // because you wanna make you state 'immutable'\n\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      preState.totalAmount + action.item.price * action.item.amount;\n    //we want to add 'item' when the item repeat\n    const existItemIndex = preState.item.findIndex(\n      (i) => i.id === action.item.id\n      //this is check the cur and the new one is the same or not\n    );\n    const existItem = preState.item[existItemIndex]; //if no item will be 'null'\n    let updatedItems;\n    if (existItem) {\n      const updateExistItem = {\n        ...existItem,\n        amount: existItem.amount + action.item.amount,\n        //we update amount here because we wanna accumulate amount together\n      };\n      updatedItems = [...preState.item]; //shallow copy for 'immutable'\n      //here we dont dispatch 'action' item because we 'only' update the amount\n      updatedItems[existItemIndex] = updateExistItem;\n      // here we overwrite the same Item\n    } else {\n      updatedItems = preState.item.concat(action.item);\n    }\n\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existItemIndex = preState.item.findIndex(\n      (i) => i.id === action.id\n      //no item but just 'id' because in removeItem we just dispatch id\n    );\n    const existItem = preState.item[existItemIndex];\n    const updatedRmoveAmount = preState.totalAmount - existItem.price;\n    let updatedItems;\n    if (existItem.amount === 1) {\n      updatedItems = preState.item.filter((i) => i.id !== action.id);\n      //false is removing arr true is keeping arr\n    } else {\n      const updateItem = { ...existItem, amount: existItem.amount - 1 }; //this is 'obj' create by 'action'\n      updatedItems = [...preState.item]; //this just for immutable\n      updatedItems[existItemIndex] = updateItem; //Re-write the 'obj' we find\n    }\n    return {\n      item: updatedItems,\n      totalAmount: updatedRmoveAmount,\n    };\n  }\n  if (action.type === \"SUBMIT\") {\n    return defaultCart;\n  }\n  return defaultCart;\n};\nconst CartContextProvider = (props) => {\n  const [cartState, dispatchCart] = useReducer(cartReducer, defaultCart);\n  //we can also add the concrete value here\n  const addItemToCart = (item) => {\n    dispatchCart({ type: \"ADD\", item: item });\n  };\n  //The App component will re-evaluate whenever the context change\n  const removeItemFromCart = (id) => {\n    dispatchCart({ type: \"REMOVE\", id: id });\n  };\n  const submitItem = (item) => {\n    dispatchCart({ type: \"SUBMIT\" });\n  };\n  const CartValue = {\n    item: cartState.item,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n    submitItem: submitItem,\n  };\n  return (\n    <CartContext.Provider value={CartValue}>\n      {props.children}\n    </CartContext.Provider>\n  );\n  // now the stuff wrap by this component will get access to here to fetch data\n};\nexport default CartContextProvider;\n","import React, { useState } from \"react\";\nimport Header from \"./components/Layout/Header\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport CartContextProvider from \"./store/CartContextProvider\";\nfunction App() {\n  // we manage the \"onClose\" in our parents component\n  const [cartShow, setCart] = useState(false);\n  const hideCart = () => {\n    setCart(false);\n  };\n  const showCart = () => {\n    setCart(true);\n  };\n  return (\n    <CartContextProvider>\n      {/* we will need to access to all the component so we wrap in App.js */}\n      {cartShow && <Cart onCloseCart={hideCart} />}\n      {/* when the Your Cart click you should call the cart */}\n      {/* <Header onShowCart={showCart} /> */}\n      <main>\n        <Meals />\n      </main>\n    </CartContextProvider>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n//UI for all the elements\n//Layout ---> Header etc..\n//Meal ---> hold the meal and also individual meal\n//Cart ---> hold all the cart related\n"],"sourceRoot":""}